How did viewing a diff between two versions of a file help you see the bug that
was introduced?

diff only shows the sections where there are differences, so instead of looking up the
whole file, I can concentrate on areas where changes were made.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

I can track changes and assess how the code evoluted.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros: -I don't have unuseful commits
	  -I can logically seperate the commits
Cons: -I might forget to commit after several changes/time

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because GIT supports tracking across files.

How can you use the commands git log and git diff to view the history of files?

git log to view the full history and git diff to see what changed between two versions.

How might using version control make you more confident to make changes that
could break something?

sure it is, I can, at any time, revert back to a versin where things are working without bugs.

Now that you have your workspace set up, what do you want to try using Git for?

for my projects where I do changes from time to time.