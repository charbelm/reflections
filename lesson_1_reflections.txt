Q:How did viewing a diff between two versions of a file help you see the bug that
was introduced?

A:diff only shows the sections where there are differences, so instead of looking up the
whole file, I can concentrate on areas where changes were made.

Q:How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

A:I can track changes and assess how the code evoluted.

Q:What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

A:Pros: -I don't have unuseful commits
        -I can logically seperate the commits
Cons:   -I might forget to commit after several changes/time

Q:Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

A:Because GIT supports tracking across files.

Q:How can you use the commands git log and git diff to view the history of files?

A:git log to view the full history and git diff to see what changed between two versions.

Q:How might using version control make you more confident to make changes that
could break something?

A:sure it is, I can, at any time, revert back to a versin where things are working without bugs.

Q:Now that you have your workspace set up, what do you want to try using Git for?

A:For my projects where I do changes from time to time.